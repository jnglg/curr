#|FR FRENCH FRANÇAIS
Glossary for terminology used in the notes.  The first entry of each entry can be either
a single string or a list of keys that map to the same definition.

If a list of keys is provided, the generated glossary will use the first in the list
when it prints out the glossary for a particular unit
|#

  (("accessor functions" "functions to extract values from a data structure")
    ("apply" "utiliser une fonction avec certaines valeurs en particulier")
    ("arguments" "les données qu’une fonction s’attend à recevoir en entrée (en paramètres) ; ils s’écrivent après le nom de la fonction")
    ("boolean" "a type of data with two values: true and false")
    (("calling" "calls") "Using a function by giving it inputs")
    ;("circle of evaluation" "un diagramme donnant la structure d’une expression")
    ("cercle d’évaluation" "un diagramme donnant la structure d’une expression")
    ("clause" "a question and its corresponding answer in a conditional expression")
    ("conditional" "a code expression made of questions and answers")
    ("constructor" "A function that creates instances of a data structure")
    ("contract" "le fait de se donner, de déclarer le nom d’une fonction, son domaine de définition et l’ensemble des valeurs qu’elle est susceptible de produire")
    ("data block" "Code that lists the name, constructor(s), and field(s) of a data structure")
    ("data structure" "A datatype which packages several datatypes as fields")   
    ("data type" "A way of classifying values, such as: Number, String, Image, Boolean, or any user-defined data structure")
    ("datatypes" "A way of classifying values, such as: Number, String, Image, Boolean, or any user-defined data structure")
    ("define" "associate a descriptive name with a value")
    ("definitions area" "la zone de l’éditeur (DrRacket or WeScheme) où l’on tape les définitions pour les fonctions et valeurs")
    ("design recipe" "a sequence of steps that helps people document, test, and write functions")
    ("domain" "le type de données qu’une fonction s’attend à recevoir")
    ("dot-accessors" "A way to extract the values of fields an instance")
    ("editor" "logiciel utilisé écrire des programmes informatiques")
    ("error message" "informations rendues par l’ordinateur sur des erreurs dans le programme")
    ("evaluate" "perform the computation in an expression, producing an answer")
    ("evaluates to" "donne le résultat d’un calcul, d’une expression")
    ("event-based programming" "a style of programming in which every functions are written to respond to mouse-clicks, keypresses, etc.")
    ("event" "something that happens outside of a running program, which the program can respond to")
    ("example" "shows the use of a function on specific inputs and the computation the function should perform on those inputs")
    ("examples block" "Code that lists examples starting with 'examples:' and ends with 'end'")
    ("expression" "un calcul écrit avec des règles précises, comme une expression numérique en mathématiques, du code informatique, un cercle d’évaluation")
    ("field" "A part of a data structure that has a name and holds a single value of a specified datatype")
    ("function definition" "code that names a function, lists its variables, and states the expression to compute when the function is used")
    ("function block" "code that names a function, lists its variables, and states the expression to compute when the function is used")
    ("function" "un objet mathématique qui consomme quelque chose en entrée et produit quelque chose en sortie")
    ("handler" "Connects an event (like a tick or keypress) and a function within a reactor")
    ("helper function" "A small function that handles a specific part of another computation, and gets called from other functions")
    ("hypotenuse" "the side opposite the 90-degree angle in a right triangle")
    ("image" "un type de données pour représenter… des images")
    ("interactions area" "la zone de l’éditeur (DrRacket or WeScheme) où l’on peut écrire des expressions à évaluer")
    ("instance" "A specific, packaged value of a data structure that contains other values in its fields.")
    ("legal expression" "code that follows the Code Rules for a language")
    (("library" "libraries") "A collection of functions that can be made available to our program by using include")
    ("mathematical expression" "un calcul d’arithmétique")
    ("piecewise function" "a function that computes different expressions based on its input")
    ("name" "ce qui nous permet de faire référence à une fonction ou à une valeur (exemples : +, *, star, circle) ; les informaticiens parlent d’identificateur")
    ("produce" "to compute a value from an expression")
    ("programming language" "un ensemble de règles pour écrire un programme informatique qu’un ordinateur peut évaluer") 
    ("purpose statement" "a brief description of what a function does")
    ("range" "the type of data that a function produces")
    ("reactor" "A value that contains a current state, and functions for updating, drawing, and interacting with that state")
    ("sample instances" "A collection of single instances, or also used to describe illustrative instances that we use to provide examples of a data structure")
    ("state" "The value of a changing system at any point in time (ie - a stoplight can be in the 'red', 'yellow' or 'green' state). In Pyret, the state of a Reactor is it's current value.")
    ("string" "toute suite de caractères entre guillemets (exemples :\"hello\", \"42\", \"Ceci est une chaîne de caractères\")")
    ("syntax" "The set of rules that defines a language, whether it be spoken, written, or programmed.")
    ("type" "un genre précisé de données, comme Number, String, Image, Booléen…")
    ("unit test" "an example showing the use of a function with a specific value or values, and the answer it should produce")
    ("value" "une donnée en particulier, comme 5 ou \"Hello\"")
    ("variable" "something that changes")
    ("variable name" "name of the information that can be different each time a function is used")
   )
